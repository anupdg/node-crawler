{"version":3,"sources":["logo.svg","Header.js","SearchBox.js","common.js","Loader.js","Details.js","Content.js","Footer.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","SearchBox","handleKeyDown","e","key","search","preventDefault","domain","state","indexOf","setState","error","props","onCrawl","handleChange","event","target","value","bind","id","size","placeholder","onKeyDown","this","onChange","required","type","onClick","errorMessage","role","Component","postData","a","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","getData","then","Loader","Fragment","loading","Details","setLoading","loadData","loadContactData","geoKeys","sslKeys","whoKeys","socialKeys","linksKey","show","domainName","details","geoData","name_server","split","join","serverError","contact","contactus","contact_us","params","match","backToList","to","Object","keys","map","g","sslData","whoData","socialData","linksData","length","c","Content","domainId","domains","crawl","showModel","hideModel","deleteDomain","clearDetail","result","history","push","style","width","domain_id","aria-hidden","title","Footer","Main","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"6KAAAA,EAAOC,QAAU,IAA0B,kC,mHCC5B,SAASC,IACpB,OACI,yBAAKC,UAAU,0CACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBAAgB,uBAAGC,KAAK,UAAUD,UAAU,gBAA5B,kB,iECHpBE,E,kDACjB,aAAe,IAAD,8BACV,gBASJC,cAAgB,SAACC,GACC,UAAVA,EAAEC,MACF,EAAKC,SACLF,EAAEG,mBAbI,EAiBdD,OAAS,WACL,IAAME,EAAS,EAAKC,MAAMD,QACZA,GAAWA,IAAWA,EAAOE,QAAQ,aAAe,GAAKF,EAAOE,QAAQ,YAAc,GAEhG,EAAKC,SAAS,CAAEC,OAAO,KAEvB,EAAKC,MAAMC,QAAQN,GACnB,EAAKG,SAAS,CAAEC,OAAO,MAxBjB,EA4BdG,aAAe,SAACC,GACZ,EAAKL,SAAS,CAAEH,OAAQQ,EAAMC,OAAOC,SA3BrC,EAAKT,MAAQ,CACTD,OAAQ,GACRI,OAAO,GAEX,EAAKT,cAAgB,EAAKA,cAAcgB,KAAnB,gBACrB,EAAKb,OAAS,EAAKA,OAAOa,KAAZ,gBACd,EAAKJ,aAAe,EAAKA,aAAaI,KAAlB,gBARV,E,qDAgCV,OACI,yBAAKnB,UAAU,yBACX,0DACA,0BAAMA,UAAU,eACZ,yBAAKA,UAAU,eACX,2BAAOoB,GAAG,MAAMC,KAAM,IAAKC,YAAY,cAAcC,UAAWC,KAAKrB,cAAesB,SAAUD,KAAKT,aAAcG,MAAOM,KAAKf,MAAMD,OAAQkB,SAAS,WAAW1B,UAAU,iBACzK,yBAAKA,UAAU,mBAAkB,4BAAQoB,GAAG,gBAAgBO,KAAK,SAASC,QAASJ,KAAKlB,OAAQN,UAAU,kBAAzE,YAE/CwB,KAAKX,MAAMgB,cAAgBL,KAAKf,MAAMG,QAAU,yBAAKQ,GAAG,eAAeU,KAAK,QAAQ9B,UAAU,sBAAsBwB,KAAKX,MAAMgB,cAAgB,sDACrI,yBAAKT,GAAG,sB,GA1CWW,aCF1BC,EAAQ,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAa,GAAIC,EAAjB,+BAAwB,GAAxB,SACGC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,KAZH,cACdY,EADc,yBAcbA,EAASC,QAdI,2CAAH,qDAiBNC,EAAO,uCAAG,WAAOf,GAAP,SAAAD,EAAA,sEACRG,MAAMF,GAClBgB,MAAK,SAAAH,GAAQ,OAAIA,EAASC,UAFN,mFAAH,sDCfP,SAASG,EAAOtC,GAC3B,OACI,kBAAC,IAAMuC,SAAP,KACKvC,EAAMwC,SAAW,yBAAKrD,UAAU,iBAAgB,yBAAKA,UAAU,UAAS,yBAAKA,UAAU,cAAa,8BAAO,8BAAO,8BAAO,8BAAO,8BAAO,8BAAO,8BAAO,kC,WCA7IsD,E,kDACjB,aAAe,IAAD,8BACV,gBACK7C,MAAQ,CAAE4C,SAAS,GACxB,EAAKE,WAAa,EAAKA,WAAWpC,KAAhB,gBAClB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,gBAAkB,EAAKA,gBAAgBtC,KAArB,gBACvB,EAAKuC,QAAU,CAAE,UAAa,wBAAyB,IAAO,MAAO,KAAQ,OAAQ,OAAU,SAAU,QAAW,UAAW,GAAM,aAAc,YAAe,eAAgB,cAAiB,uBAAwB,aAAgB,uBAC3O,EAAKC,QAAU,CAAE,SAAY,WAAY,eAAkB,iBAAkB,WAAc,aAAc,SAAY,YACrH,EAAKC,QAAU,CAAE,wBAA2B,OAAQ,cAAiB,0BAA2B,aAAgB,oBAChH,EAAKC,WAAa,CAAE,OAAU,GAAI,SAAY,WAAY,QAAW,UAAW,UAAa,aAC7F,EAAKC,SAAW,CAAE,QAAW,qBAAsB,MAAS,yBAVlD,E,uDAYHC,GACPvC,KAAKb,SAAS,CAAE0C,QAASU,M,wEAGdC,G,uFAEPxC,KAAK+B,YAAW,G,SACMN,EAAQ,YAAD,OAAae,I,QAApCC,E,SACSA,EAAQC,SAAWD,EAAQC,QAAQC,cAC9CF,EAAQC,QAAQC,YAAcF,EAAQC,QAAQC,YAAYC,MAAM,KAAKC,KAAK,OAE9E7C,KAAKb,SAAS,CAAEsD,QAASA,IACzBzC,KAAK+B,YAAW,G,kDAEhB/B,KAAKb,SAAS,CAAE2D,YAAa,oCAC7B9C,KAAK+B,YAAW,G,gMAGFS,G,uFAEdxC,KAAK+B,YAAW,G,SACMN,EAAQ,YAAD,OAAae,EAAb,a,OAAvBO,E,OACN/C,KAAKb,SAAS,CAAE6D,UAAWD,EAAQE,aACnCjD,KAAK+B,YAAW,G,gDAEhB/B,KAAKb,SAAS,CAAE2D,YAAa,oCAC7B9C,KAAK+B,YAAW,G,2QAIHmB,EAAalD,KAAKX,MAA3B8D,MAASD,SAEblD,KAAKb,SAAS,CAAE4D,QAASG,EAAOH,QAASP,WAAYU,EAAOV,aAAc,WAClEU,EAAOH,QACP/C,KAAKiC,gBAAgBiB,EAAOV,YAE5BxC,KAAKgC,SAASkB,EAAOV,e,qIAK3B,IAAD,OACL,OAAIxC,KAAKf,MAAMmE,WACJ,kBAAC,IAAD,CAAUC,GAAG,MAGpB,yBAAKzD,GAAG,QAAQpB,UAAU,gCACtB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,kBAACmD,EAAD,CAAQE,QAAS7B,KAAKf,MAAM4C,UAC5B,wBAAIrD,UAAU,mBAAmBwB,KAAKf,MAAM8D,QAAU,WAAa,GAAnE,gBAAoF/C,KAAKf,MAAMuD,YAAgB,uBAAGhE,UAAU,aAAa4B,QAAS,WAAQ,EAAKjB,SAAS,CAAEiE,YAAY,MAAvE,gBAC/G,yBAAK5E,UAAU,sBACTwB,KAAKf,MAAM8D,SAAW,kBAAC,IAAMnB,SAAP,KACnB5B,KAAKf,MAAMwD,SAAWzC,KAAKf,MAAMwD,QAAQC,SAAW,yBAAKlE,UAAU,QAChE,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,aACVwB,KAAKkC,SAAWoB,OAAOC,KAAKvD,KAAKkC,SAASsB,KAAI,SAAAC,GAAC,OAAI,wBAAI5E,IAAK4E,GACzD,4BAAK,EAAKvB,QAAQuB,IAClB,4BAAK,EAAKxE,MAAMwD,QAAQC,QAAQe,IAAM,uBAIjDzD,KAAKf,MAAMwD,SAAWzC,KAAKf,MAAMwD,QAAQiB,SAAW,yBAAKlF,UAAU,aAChE,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACVwB,KAAKmC,SAAWmB,OAAOC,KAAKvD,KAAKmC,SAASqB,KAAI,SAAAC,GAAC,OAAI,wBAAI5E,IAAK4E,GACzD,4BAAK,EAAKtB,QAAQsB,IAClB,4BAAK,EAAKxE,MAAMwD,QAAQiB,QAAQD,IAAM,uBAIjDzD,KAAKf,MAAMwD,SAAWzC,KAAKf,MAAMwD,QAAQkB,SAAW,yBAAKnF,UAAU,aAChE,yBAAKA,UAAU,eAAf,iBACA,yBAAKA,UAAU,aACVwB,KAAKoC,SAAWkB,OAAOC,KAAKvD,KAAKoC,SAASoB,KAAI,SAAAC,GAAC,OAAI,wBAAI5E,IAAK4E,GACzD,4BAAK,EAAKrB,QAAQqB,IAClB,4BAAK,EAAKxE,MAAMwD,QAAQkB,QAAQF,IAAM,uBAIjDzD,KAAKf,MAAMwD,SAAWzC,KAAKf,MAAMwD,QAAQmB,YAAc,yBAAKpF,UAAU,aACnE,yBAAKA,UAAU,eAAf,kBACA,yBAAKA,UAAU,aACVwB,KAAKqC,YAAciB,OAAOC,KAAKvD,KAAKqC,YAAYmB,KAAI,SAAAC,GAAC,OAAI,kBAAC,IAAM7B,SAAP,KAAiB,EAAK3C,MAAMwD,QAAQmB,WAAWH,IAAM,wBAAI5E,IAAK4E,GACpH,4BAAK,EAAKpB,WAAWoB,IACrB,4BAAK,EAAKxE,MAAMwD,QAAQmB,WAAWH,WAI9CzD,KAAKf,MAAMwD,SAAWzC,KAAKf,MAAMwD,QAAQoB,WAAa,yBAAKrF,UAAU,aAClE,yBAAKA,UAAU,eAAf,0BACA,yBAAKA,UAAU,aACVwB,KAAKsC,UAAYgB,OAAOC,KAAKvD,KAAKsC,UAAUkB,KAAI,SAAAC,GAAC,OAAI,wBAAI5E,IAAK4E,GAC3D,4BAAK,EAAKnB,SAASmB,IACnB,4BAAK,EAAKxE,MAAMwD,QAAQoB,UAAUJ,IAAM,wBAKvDzD,KAAKf,MAAM8D,SAAW,yBAAKvE,UAAU,QAClC,yBAAKA,UAAU,eAAf,sBACCwB,KAAKf,MAAM+D,WAAa,yBAAKxE,UAAU,aACnCwB,KAAKf,MAAM+D,UAAUc,OAAS,GAAK9D,KAAKf,MAAM+D,UAAUQ,KAAI,SAAAO,GAAC,OAAI,kBAAC,IAAMnC,SAAP,KAAiBmC,EAAjB,IAAoB,mCAExF/D,KAAKf,MAAM+D,WAAa,yBAAKxE,UAAU,aAAf,qC,GArHrB+B,aCEhByD,E,kDACjB,aAAe,IAAD,8BACV,gBACK/E,MAAQ,CAAE4C,SAAS,EAAOiB,YAAa,GAAImB,SAAU,EAAGC,QAAS,IACtE,EAAKC,MAAQ,EAAKA,MAAMxE,KAAX,gBACb,EAAKoC,WAAa,EAAKA,WAAWpC,KAAhB,gBAClB,EAAKyE,UAAY,EAAKA,UAAUzE,KAAf,gBACjB,EAAK0E,UAAY,EAAKA,UAAU1E,KAAf,gBACjB,EAAK2E,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAK4E,YAAc,EAAKA,YAAY5E,KAAjB,gBART,E,0DAYVK,KAAKb,SAAS,CAAE8E,SAAU,EAAGlB,SAAS,M,iCAE/BR,GACPvC,KAAKb,SAAS,CAAE0C,QAASU,M,qEAGjBvD,G,uFAEJgB,KAAKuE,cACLvE,KAAK+B,YAAW,G,SACKvB,EAAS,WAAY,CAAExB,OAAQA,I,cAA9CwF,E,yBAEIxE,KAAKgC,W,OACXhC,KAAK+B,YAAW,G,kDAEhB/B,KAAK+B,YAAW,G,QAEjByC,GAAUA,EAAOxF,QAAUwF,EAAOxF,OAAOiF,UACxCjE,KAAKoE,UAAUI,EAAOxF,OAAOiF,SAAUO,EAAOxF,OAAOwD,YAAY,GAErExC,KAAKb,SAAS,CAAE2D,YAAa,O,kDAE7B9C,KAAKb,SAAS,CAAE2D,YAAa,oCAC7B9C,KAAK+B,YAAW,G,oMAGLkC,G,iFAEXjE,KAAK+B,YAAW,G,SACKvB,EAAS,YAAD,OAAayD,EAAb,Y,uCAEnBjE,KAAKgC,W,OACXhC,KAAK+B,YAAW,G,kDAEhB/B,KAAK+B,YAAW,G,QAEpB/B,KAAKb,SAAS,CAAE2D,YAAa,O,kDAE7B9C,KAAKb,SAAS,CAAE2D,YAAa,oCAC7B9C,KAAK+B,YAAW,G,kKAIpB/B,KAAKgC,a,iKAIDhC,KAAK+B,YAAW,G,SACMN,EAAQ,Y,OAAxByC,E,OACNlE,KAAKb,SAAS,CAAE+E,QAASA,IACzBlE,KAAK+B,YAAW,G,gDAEhB/B,KAAKb,SAAS,CAAE2D,YAAa,oCAC7B9C,KAAK+B,YAAW,G,+IAIdnC,EAAIZ,EAAQ+D,GACfA,EACC/C,KAAKX,MAAMoF,QAAQC,KAAnB,WAA4B1F,EAA5B,aAEAgB,KAAKX,MAAMoF,QAAQC,KAAnB,WAA4B1F,M,kCAKhCgB,KAAKb,SAAS,CAAE8E,SAAU,S,+BAEpB,IAAD,OACL,OACI,kBAAC,IAAMrC,SAAP,KACI,kBAACD,EAAD,CAAQE,QAAS7B,KAAKf,MAAM4C,UAC5B,kBAAC,EAAD,CAAWxB,aAAcL,KAAKf,MAAM6D,YAAaxD,QAASU,KAAKmE,QAC/D,yBAAKvE,GAAG,QAAQpB,UAAU,2BACtB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACVwB,KAAKf,MAAMgF,UAAY,GAAK,kBAAC,IAAMrC,SAAP,KACzB,2CACA,2BAAOpD,UAAU,4BACb,+BACI,4BACI,wBAAImG,MAAO,CAAEC,MAAO,OAApB,KACA,wBAAID,MAAO,CAAEC,MAAO,QAApB,cACA,wBAAID,MAAO,CAAEC,MAAO,QAApB,WACA,wBAAID,MAAO,CAAEC,MAAO,SACpB,wBAAID,MAAO,CAAEC,MAAO,WAG5B,+BACK5E,KAAKf,MAAMiF,SAAWlE,KAAKf,MAAMiF,QAAQV,KAAI,SAAAO,GAAC,OAAI,wBAAIlF,IAAKkF,EAAEc,WAC1D,gCAAK,uBAAGrG,UAAU,SAAS4B,QAAS,WAAQ,EAAKkE,aAAaP,EAAEc,aAAc,0BAAMC,cAAY,OAAOC,MAAM,gBAAgBvG,UAAU,gDACvI,wBAAIA,UAAU,cAAcuF,EAAEc,WAC9B,4BAAKd,EAAE/E,QACP,4BAAI,uBAAGoB,QAAS,WAAQ,EAAKgE,UAAUL,EAAEc,UAAWd,EAAE/E,SAAWR,UAAU,gBAAvE,gBAAmG,0BAAMsG,cAAY,OAAOC,MAAM,eAAevG,UAAU,+BAC/J,4BAAI,uBAAG4B,QAAS,WAAQ,EAAKgE,UAAUL,EAAEc,UAAWd,EAAE/E,QAAQ,IAASR,UAAU,gBAA7E,wBAAiH,0BAAMsG,cAAY,OAAOC,MAAM,eAAevG,UAAU,sCAM5LwB,KAAKf,MAAMgF,SAAW,GAAK,kBAAC,EAAD,CAASA,SAAUjE,KAAKf,MAAMgF,SAAUlB,QAAS/C,KAAKf,MAAM8D,QAASK,WAAYpD,KAAKuE,YAAavF,OAAQgB,KAAKf,MAAMD,OAAQqF,UAAWrE,KAAKqE,oB,GAjHjK9D,aCLtB,SAASyE,IACpB,OACI,4BAAQxG,UAAU,yCAAwC,uBAAGC,KAAK,UAAUsG,MAAM,UAAS,0BAAMvG,UAAU,qC,YCQpG,SAASyG,IACpB,OAAQ,kBAAC,IAAMrD,SAAP,KACJ,kBAACrD,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2G,KAAK,wBAAwBC,UAAWrD,IAC/C,kBAAC,IAAD,CAAOoD,KAAK,eAAgBC,UAAWrD,IACvC,kBAAC,IAAD,CAAOoD,KAAK,IAAKC,UAAWnB,MAGpC,kBAACgB,EAAD,OCTOI,MARf,WACE,OACE,yBAAK5G,UAAU,OACb,kBAACyG,EAAD,QCIcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrC,MACvB,2DCZNsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAA/G,GACLgH,QAAQhH,MAAMA,EAAMiH,c","file":"static/js/main.a4f7de4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-default navbar-fixed-top\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header\"><a href=\"#myPage\" className=\"navbar-brand\">Web Checker</a></div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SearchBox extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            domain: '',\r\n            error: false\r\n        };\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.search();\r\n            e.preventDefault();\r\n        }\r\n\r\n      }\r\n    search = () => {\r\n        const domain = this.state.domain;\r\n        const flag = !domain || (domain && (domain.indexOf('https://') >= 0 || domain.indexOf('http://') >= 0));\r\n        if (flag) {\r\n            this.setState({ error: true })\r\n        } else {\r\n            this.props.onCrawl(domain);\r\n            this.setState({ error: false });\r\n        }\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ domain: event.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron text-center\">\r\n                <h1>Enter the domain to search</h1>\r\n                <form className=\"form-inline\">\r\n                    <div className=\"input-group\">\r\n                        <input id=\"url\" size={100} placeholder=\"Domain name\" onKeyDown={this.handleKeyDown} onChange={this.handleChange} value={this.state.domain} required=\"required\" className=\"form-control\" />\r\n                        <div className=\"input-group-btn\"><button id=\"generateLinks\" type=\"button\" onClick={this.search} className=\"btn btn-danger\">Check</button></div>\r\n                    </div>\r\n        {(this.props.errorMessage || this.state.error) && <div id=\"errorMessage\" role=\"alert\" className=\"alert alert-danger\">{this.props.errorMessage || 'Enter a nacked domain(without https:// or http://)'}</div>}\r\n                    <div id=\"placeholder\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const postData = async (url = '', data = {}) => {\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n\r\n  export const getData = async (url)=> {\r\n    return await fetch(url)\r\n    .then(response => response.json())\r\n  }","import React from 'react'\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {props.loading && <div className=\"lds-container\"><div className=\"center\"><div className=\"lds-roller\"><div /><div /><div /><div /><div /><div /><div /><div /></div></div></div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Loader from './Loader';\r\nimport { getData } from './common'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Details extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { loading: false }\r\n        this.setLoading = this.setLoading.bind(this);\r\n        this.loadData = this.loadData.bind(this);\r\n        this.loadContactData = this.loadContactData.bind(this);\r\n        this.geoKeys = { 'registrar': 'Name of the registrar', 'asn': 'ASN', 'city': 'City', 'region': 'Region', 'country': 'Country', 'ip': 'IP Address', 'name_server': 'Name Servers', 'creation_date': 'Domain Creation Date', 'updated_date': 'Domain Updated Date' }\r\n        this.sslKeys = { 'ocsp_uri': 'OCSP Uri', 'ca_issuers_uri': 'CA Issuers Uri', 'valid_from': 'Valid from', 'valid_to': 'Valid to' };\r\n        this.whoKeys = { 'registrant_organization': 'Name', 'creation_date': 'First Registration Date', 'updated_date': 'Last Change Date' };\r\n        this.socialKeys = { 'nodata': '', 'facebook': 'Facebook', 'twitter': 'Twitter', 'instagram': 'Instagram' };\r\n        this.linksKey = { 'privacy': 'Privacy Policy Url', 'terms': 'Term and Services Url' };\r\n    }\r\n    setLoading(show) {\r\n        this.setState({ loading: show });\r\n    }\r\n\r\n    async loadData(domainName) {\r\n        try {\r\n            this.setLoading(true);\r\n            const details = await getData(`/domains/${domainName}`);\r\n            if (details && details.geoData && details.geoData.name_server) {\r\n                details.geoData.name_server = details.geoData.name_server.split(',').join(', ');\r\n            }\r\n            this.setState({ details: details });\r\n            this.setLoading(false);\r\n        } catch (ex) {\r\n            this.setState({ serverError: \"Error happened while processing\" });\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n    async loadContactData(domainName) {\r\n        try {\r\n            this.setLoading(true);\r\n            const contact = await getData(`/domains/${domainName}/contact`);\r\n            this.setState({ contactus: contact.contact_us });\r\n            this.setLoading(false);\r\n        } catch (ex) {\r\n            this.setState({ serverError: \"Error happened while processing\" });\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        if (params) {\r\n            this.setState({ contact: params.contact, domainName: params.domainName }, function () {\r\n                if (params.contact) {\r\n                    this.loadContactData(params.domainName);\r\n                } else {\r\n                    this.loadData(params.domainName);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.backToList) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div id=\"about\" className=\"container-fluid bg-grey m-t5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <Loader loading={this.state.loading}></Loader>\r\n                        <h1 className=\"modal-title f-l\">{this.state.contact ? 'Contact ' : ''} Details for {this.state.domainName}</h1><a className=\"f-r b-link\" onClick={() => { this.setState({ backToList: true }) }}>Back to list</a>\r\n                        <div className=\"bd-details cl-fix\">\r\n                            {!this.state.contact && <React.Fragment>\r\n                                {this.state.details && this.state.details.geoData && <div className=\"card\">\r\n                                    <div className=\"card-header\">Geo-location details</div>\r\n                                    <div className=\"card-body\">\r\n                                        {this.geoKeys && Object.keys(this.geoKeys).map(g => <dl key={g}>\r\n                                            <dt>{this.geoKeys[g]}</dt>\r\n                                            <dd>{this.state.details.geoData[g] || 'No data found'}</dd>\r\n                                        </dl>)}\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.details && this.state.details.sslData && <div className=\"card mt-1\">\r\n                                    <div className=\"card-header\">SSL details</div>\r\n                                    <div className=\"card-body\">\r\n                                        {this.sslKeys && Object.keys(this.sslKeys).map(g => <dl key={g}>\r\n                                            <dt>{this.sslKeys[g]}</dt>\r\n                                            <dd>{this.state.details.sslData[g] || 'No data found'}</dd>\r\n                                        </dl>)}\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.details && this.state.details.whoData && <div className=\"card mt-1\">\r\n                                    <div className=\"card-header\">Whois details</div>\r\n                                    <div className=\"card-body\">\r\n                                        {this.whoKeys && Object.keys(this.whoKeys).map(g => <dl key={g}>\r\n                                            <dt>{this.whoKeys[g]}</dt>\r\n                                            <dd>{this.state.details.whoData[g] || 'No data found'}</dd>\r\n                                        </dl>)}\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.details && this.state.details.socialData && <div className=\"card mt-1\">\r\n                                    <div className=\"card-header\">Social details</div>\r\n                                    <div className=\"card-body\">\r\n                                        {this.socialKeys && Object.keys(this.socialKeys).map(g => <React.Fragment>{this.state.details.socialData[g] && <dl key={g}>\r\n                                            <dt>{this.socialKeys[g]}</dt>\r\n                                            <dd>{this.state.details.socialData[g]}</dd>\r\n                                        </dl>}</React.Fragment>)}\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.details && this.state.details.linksData && <div className=\"card mt-1\">\r\n                                    <div className=\"card-header\">Privacy and Terms urls</div>\r\n                                    <div className=\"card-body\">\r\n                                        {this.linksKey && Object.keys(this.linksKey).map(g => <dl key={g}>\r\n                                            <dt>{this.linksKey[g]}</dt>\r\n                                            <dd>{this.state.details.linksData[g] || 'No data found'}</dd>\r\n                                        </dl>)}\r\n                                    </div>\r\n                                </div>}\r\n                            </React.Fragment>}\r\n                            {this.state.contact && <div className=\"card\">\r\n                                <div className=\"card-header\">Contact us details</div>\r\n                                {this.state.contactus && <div className=\"card-body\">\r\n                                    {this.state.contactus.length > 0 && this.state.contactus.map(c => <React.Fragment>{c} <br /></React.Fragment>)}\r\n                                </div>}\r\n                                {!this.state.contactus && <div className=\"card-body\">No contact details found</div>}\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport { postData, getData } from './common'\r\nimport Details from './Details';\r\nimport Loader from './Loader';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Content extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { loading: false, serverError: '', domainId: 0, domains: [] }\r\n        this.crawl = this.crawl.bind(this);\r\n        this.setLoading = this.setLoading.bind(this);\r\n        this.showModel = this.showModel.bind(this);\r\n        this.hideModel = this.hideModel.bind(this);\r\n        this.deleteDomain = this.deleteDomain.bind(this);\r\n        this.clearDetail = this.clearDetail.bind(this);\r\n    }\r\n\r\n    clearDetail() {\r\n        this.setState({ domainId: 0, contact: false });\r\n    }\r\n    setLoading(show) {\r\n        this.setState({ loading: show });\r\n    }\r\n\r\n    async crawl(domain) {\r\n        try {\r\n            this.clearDetail();\r\n            this.setLoading(true);\r\n            const result = await postData('/crawler', { domain: domain });\r\n            try {\r\n                await this.loadData();\r\n                this.setLoading(false);\r\n            } catch (ex) {\r\n                this.setLoading(false);\r\n            }\r\n            if(result && result.domain && result.domain.domainId){\r\n                this.showModel(result.domain.domainId, result.domain.domainName, false);\r\n            }\r\n            this.setState({ serverError: null });\r\n        } catch (ex) {\r\n            this.setState({ serverError: \"Error happened while processing\" });\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n    async deleteDomain(domainId) {\r\n        try {\r\n            this.setLoading(true);\r\n            const result = await postData(`/domains/${domainId}/delete`);\r\n            try {\r\n                await this.loadData();\r\n                this.setLoading(false);\r\n            } catch (ex) {\r\n                this.setLoading(false);\r\n            }\r\n            this.setState({ serverError: null });\r\n        } catch (ex) {\r\n            this.setState({ serverError: \"Error happened while processing\" });\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    async loadData() {\r\n        try {\r\n            this.setLoading(true);\r\n            const domains = await getData('/domains');\r\n            this.setState({ domains: domains });\r\n            this.setLoading(false);\r\n        } catch (ex) {\r\n            this.setState({ serverError: \"Error happened while processing\" });\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n    showModel(id, domain, contact) {\r\n        if(contact){\r\n            this.props.history.push(`/${domain}/contact`)\r\n        }else{\r\n            this.props.history.push(`/${domain}`)\r\n        }\r\n    }\r\n\r\n    hideModel() {\r\n        this.setState({ domainId: null });\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Loader loading={this.state.loading}></Loader>\r\n                <SearchBox errorMessage={this.state.serverError} onCrawl={this.crawl}></SearchBox>\r\n                <div id=\"about\" className=\"container-fluid bg-grey\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            {this.state.domainId <= 0 && <React.Fragment>\r\n                                <h1>Domain data</h1>\r\n                                <table className=\"table website-table-data\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style={{ width: '5%' }}> </th>\r\n                                            <th style={{ width: '10%' }}>Website Id</th>\r\n                                            <th style={{ width: '30%' }}>Domain </th>\r\n                                            <th style={{ width: '15%' }} />\r\n                                            <th style={{ width: '15%' }} />\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.domains && this.state.domains.map(c => <tr key={c.domain_id}>\r\n                                            <td> <a className=\"remove\" onClick={() => { this.deleteDomain(c.domain_id) }}><span aria-hidden=\"true\" title=\"Delete domain\" className=\"glyphicon glyphicon-remove-circle i-color\" /></a></td>\r\n                                            <td className=\"website-id\">{c.domain_id}</td>\r\n                                            <td>{c.domain}</td>\r\n                                            <td><a onClick={() => { this.showModel(c.domain_id, c.domain) }} className=\"copy i-color\">View details <span aria-hidden=\"true\" title=\"View details\" className=\"glyphicon glyphicon-copy\" /></a></td>\r\n                                            <td><a onClick={() => { this.showModel(c.domain_id, c.domain, true) }} className=\"copy i-color\">View contact details <span aria-hidden=\"true\" title=\"View details\" className=\"glyphicon glyphicon-copy\" /></a></td>\r\n                                        </tr>)}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </React.Fragment>}\r\n                            {this.state.domainId > 0 && <Details domainId={this.state.domainId} contact={this.state.contact} backToList={this.clearDetail} domain={this.state.domain} hideModel={this.hideModel}></Details>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"container-fluid text-center footer-bg\"><a href=\"#myPage\" title=\"To Top\"><span className=\"glyphicon glyphicon-chevron-up\" /></a></footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Details from './Details'\r\nimport Footer from './Footer';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Main() {\r\n    return (<React.Fragment>\r\n        <Header ></Header>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/:domainName/:contact\" component={Details}></Route>\r\n                <Route path=\"/:domainName\"  component={Details}></Route>\r\n                <Route path=\"/\"  component={Content}></Route>\r\n            </Switch>\r\n        </Router>\r\n        <Footer></Footer>\r\n    </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main></Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}